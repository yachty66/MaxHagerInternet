{
  
    
        "post0": {
            "title": "Title",
            "content": "conda install -c conda-forge youtube-dl . Collecting package metadata (current_repodata.json): done Solving environment: done ## Package Plan ## environment location: /Users/maxhager/opt/anaconda3 added / updated specs: - youtube-dl The following packages will be downloaded: package | build |-- conda-4.11.0 | py39h6e9494a_0 16.9 MB conda-forge youtube-dl-2021.12.17 | pyhd8ed1ab_0 1.1 MB conda-forge Total: 18.0 MB The following NEW packages will be INSTALLED: youtube-dl conda-forge/noarch::youtube-dl-2021.12.17-pyhd8ed1ab_0 The following packages will be SUPERSEDED by a higher-priority channel: conda pkgs/main::conda-4.11.0-py39hecd8cb5_0 --&gt; conda-forge::conda-4.11.0-py39h6e9494a_0 Downloading and Extracting Packages conda-4.11.0 | 16.9 MB | ##################################### | 100% youtube-dl-2021.12.1 | 1.1 MB | ##################################### | 100% Preparing transaction: done Verifying transaction: done Executing transaction: done Note: you may need to restart the kernel to use updated packages. . conda install ffmpeg . Collecting package metadata (current_repodata.json): done Solving environment: done ## Package Plan ## environment location: /Users/maxhager/opt/anaconda3 added / updated specs: - ffmpeg The following packages will be downloaded: package | build |-- ffmpeg-4.2.2 | h97e5cf8_0 22.9 MB gettext-0.21.0 | h7535e17_0 2.6 MB gnutls-3.6.15 | hed9c0bf_0 974 KB lame-3.100 | h1de35cc_0 316 KB libidn2-2.3.2 | h9ed2024_0 85 KB libopus-1.3.1 | h1de35cc_0 480 KB libtasn1-4.16.0 | h9ed2024_0 53 KB libunistring-0.9.10 | h9ed2024_0 519 KB libvpx-1.7.0 | h378b8a2_0 1.3 MB nettle-3.7.3 | h230ac6f_1 380 KB openh264-2.1.1 | h8346a28_0 655 KB x264-1!157.20191217 | h1de35cc_0 910 KB Total: 31.1 MB The following NEW packages will be INSTALLED: ffmpeg pkgs/main/osx-64::ffmpeg-4.2.2-h97e5cf8_0 gettext pkgs/main/osx-64::gettext-0.21.0-h7535e17_0 gnutls pkgs/main/osx-64::gnutls-3.6.15-hed9c0bf_0 lame pkgs/main/osx-64::lame-3.100-h1de35cc_0 libidn2 pkgs/main/osx-64::libidn2-2.3.2-h9ed2024_0 libopus pkgs/main/osx-64::libopus-1.3.1-h1de35cc_0 libtasn1 pkgs/main/osx-64::libtasn1-4.16.0-h9ed2024_0 libunistring pkgs/main/osx-64::libunistring-0.9.10-h9ed2024_0 libvpx pkgs/main/osx-64::libvpx-1.7.0-h378b8a2_0 nettle pkgs/main/osx-64::nettle-3.7.3-h230ac6f_1 openh264 pkgs/main/osx-64::openh264-2.1.1-h8346a28_0 x264 pkgs/main/osx-64::x264-1!157.20191217-h1de35cc_0 The following packages will be SUPERSEDED by a higher-priority channel: conda conda-forge::conda-4.11.0-py39h6e9494~ --&gt; pkgs/main::conda-4.11.0-py39hecd8cb5_0 Downloading and Extracting Packages libunistring-0.9.10 | 519 KB | ##################################### | 100% libopus-1.3.1 | 480 KB | ##################################### | 100% libvpx-1.7.0 | 1.3 MB | ##################################### | 100% x264-1!157.20191217 | 910 KB | ##################################### | 100% libtasn1-4.16.0 | 53 KB | ##################################### | 100% nettle-3.7.3 | 380 KB | ##################################### | 100% gnutls-3.6.15 | 974 KB | ##################################### | 100% ffmpeg-4.2.2 | 22.9 MB | ##################################### | 100% gettext-0.21.0 | 2.6 MB | ##################################### | 100% openh264-2.1.1 | 655 KB | ##################################### | 100% lame-3.100 | 316 KB | ##################################### | 100% libidn2-2.3.2 | 85 KB | ##################################### | 100% Preparing transaction: done Verifying transaction: done Executing transaction: done Note: you may need to restart the kernel to use updated packages. . from __future__ import unicode_literals import youtube_dl ydl_opts = { &#39;format&#39;: &#39;bestaudio/best&#39;, &#39;postprocessors&#39;: [{ &#39;key&#39;: &#39;FFmpegExtractAudio&#39;, &#39;preferredcodec&#39;: &#39;mp3&#39;, &#39;preferredquality&#39;: &#39;192&#39;, }], } with youtube_dl.YoutubeDL(ydl_opts) as ydl: ydl.download([&#39;https://www.youtube.com/watch?v=XHNHq1mC0VQ&#39;]) . [youtube] XHNHq1mC0VQ: Downloading webpage [youtube] XHNHq1mC0VQ: Downloading player 96dcbc8c [download] Destination: ZHU at Hakuba Iwatake in Nagano, Japan for Cercle-XHNHq1mC0VQ.webm [download] 24.6% of 107.09MiB at 41.79KiB/s ETA 32:59:14 . ERROR: giving up after 0 retries . DownloadError Traceback (most recent call last) /var/folders/0n/n106l5rn7cb6yw8038g17vcm0000gn/T/ipykernel_78323/367676581.py in &lt;module&gt; 12 } 13 with youtube_dl.YoutubeDL(ydl_opts) as ydl: &gt; 14 ydl.download([&#39;https://www.youtube.com/watch?v=XHNHq1mC0VQ&#39;]) ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in download(self, url_list) 2066 try: 2067 # It also downloads the videos -&gt; 2068 res = self.extract_info( 2069 url, force_generic_extractor=self.params.get(&#39;force_generic_extractor&#39;, False)) 2070 except UnavailableVideoError: ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in extract_info(self, url, download, ie_key, extra_info, process, force_generic_extractor) 806 &#39;and will probably not work.&#39;) 807 --&gt; 808 return self.__extract_info(url, ie, download, extra_info, process) 809 else: 810 self.report_error(&#39;no suitable InfoExtractor for URL %s&#39; % url) ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in wrapper(self, *args, **kwargs) 813 def wrapper(self, *args, **kwargs): 814 try: --&gt; 815 return func(self, *args, **kwargs) 816 except GeoRestrictedError as e: 817 msg = e.msg ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in __extract_info(self, url, ie, download, extra_info, process) 845 self.add_default_extra_info(ie_result, ie, url) 846 if process: --&gt; 847 return self.process_ie_result(ie_result, download, extra_info) 848 else: 849 return ie_result ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in process_ie_result(self, ie_result, download, extra_info) 879 if result_type == &#39;video&#39;: 880 self.add_extra_info(ie_result, extra_info) --&gt; 881 return self.process_video_result(ie_result, download=download) 882 elif result_type == &#39;url&#39;: 883 # We have to add extra_info to the results because it may be ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in process_video_result(self, info_dict, download) 1690 new_info = dict(info_dict) 1691 new_info.update(format) -&gt; 1692 self.process_info(new_info) 1693 # We update the info dict with the best quality format (backwards compatibility) 1694 info_dict.update(formats_to_download[-1]) ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in process_info(self, info_dict) 1974 else: 1975 # Just a single file -&gt; 1976 success = dl(filename, info_dict) 1977 except (compat_urllib_error.URLError, compat_http_client.HTTPException, socket.error) as err: 1978 self.report_error(&#39;unable to download video data: %s&#39; % error_to_compat_str(err)) ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in dl(name, info) 1913 if self.params.get(&#39;verbose&#39;): 1914 self.to_screen(&#39;[debug] Invoking downloader on %r&#39; % info.get(&#39;url&#39;)) -&gt; 1915 return fd.download(name, info) 1916 1917 if info_dict.get(&#39;requested_formats&#39;) is not None: ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/downloader/common.py in download(self, filename, info_dict) 364 time.sleep(sleep_interval) 365 --&gt; 366 return self.real_download(filename, info_dict) 367 368 def real_download(self, filename, info_dict): ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/downloader/http.py in real_download(self, filename, info_dict) 361 return True 362 --&gt; 363 self.report_error(&#39;giving up after %s retries&#39; % retries) 364 return False ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/downloader/common.py in report_error(self, *args, **kargs) 163 164 def report_error(self, *args, **kargs): --&gt; 165 self.ydl.report_error(*args, **kargs) 166 167 def slow_down(self, start_time, now, byte_counter): ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in report_error(self, message, tb) 626 _msg_header = &#39;ERROR:&#39; 627 error_message = &#39;%s %s&#39; % (_msg_header, message) --&gt; 628 self.trouble(error_message, tb) 629 630 def report_file_already_downloaded(self, file_name): ~/opt/anaconda3/lib/python3.9/site-packages/youtube_dl/YoutubeDL.py in trouble(self, message, tb) 596 else: 597 exc_info = sys.exc_info() --&gt; 598 raise DownloadError(message, exc_info) 599 self._download_retcode = 1 600 DownloadError: ERROR: giving up after 0 retries .",
            "url": "https://yachty66.github.io/MaxHagerInternet/2022/02/18/YouTubeAudioDownloader.html",
            "relUrl": "/2022/02/18/YouTubeAudioDownloader.html",
            "date": " • Feb 18, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "This is the first post. .",
            "url": "https://yachty66.github.io/MaxHagerInternet/2022/02/13/First-post.html",
            "relUrl": "/2022/02/13/First-post.html",
            "date": " • Feb 13, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I just started and will make some updates all over the place soon. .",
          "url": "https://yachty66.github.io/MaxHagerInternet/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://yachty66.github.io/MaxHagerInternet/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}